@charset "UTF-8";
/**
  Нормализация блочной модели
 */
*,
::before,
::after {
  box-sizing: border-box;
}

/**
  Убираем внутренние отступы слева тегам списков,
  у которых есть атрибут class
 */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
  Убираем внешние отступы body и двум другим тегам,
  у которых есть атрибут class
 */
body,
:where(blockquote, figure, fieldset):where([class]) {
  margin: 0;
}

/**
  Убираем внешние отступы вертикали нужным тегам,
  у которых есть атрибут class
 */
:where(h1,
h2,
h3,
h4,
h5,
h6,
p,
ul,
ol,
dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  margin-left: 0;
  padding: 0;
  border: none;
}

/**
  Убираем стандартный маркер маркированному списку,
  у которого есть атрибут class
 */
:where(ul[class]) {
  list-style: none;
}

:where(address[class]) {
  font-style: normal;
}

/**
  Обнуляем вертикальные внешние отступы параграфа,
  объявляем локальную переменную для внешнего отступа вниз,
  чтобы избежать взаимодействие с более сложным селектором
 */
p {
  --paragraphMarginBottom: 24px;
  margin-block: 0;
}

/**
  Внешний отступ вниз для параграфа без атрибута class,
  который расположен не последним среди своих соседних элементов
 */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}

/**
  Упрощаем работу с изображениями и видео
 */
img,
video {
  display: block;
  max-width: 100%;
  height: auto;
}

/**
  Наследуем свойства шрифт для полей ввода
 */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  height: 100%;
  /**
    Убираем скачок интерфейса по горизонтали
    при появлении / исчезновении скроллбара
   */
  scrollbar-gutter: stable;
}

/**
  Плавный скролл
 */
html {
  scroll-behavior: smooth;
}

body {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  min-height: 100%;
  /**
    Унифицированный интерлиньяж
   */
  line-height: 1.5;
}

/**
    Приводим к единому цвету svg-элементы
*/
svg *[fill] {
  fill: currentColor;
}

svg *[stroke] {
  stroke: currentColor;
}

/**
    Чиним баг задержки смены цвета при взаимодействии с svg-элементами    
*/
svg * {
  transition-property: fill, stroke;
}

/**
  Нормализация высоты элемента ссылки при его инспектировании в DevTools
 */
a:where([class]) {
  display: inline-flex;
}

/**
  Курсор-рука при наведении на элемент
 */
button,
label {
  cursor: pointer;
}

/**
  Приводим к единому цвету svg-элементы
  (за исключением тех, у которых уже указан
  атрибут fill со значением 'none' или начинается с 'url')
 */
:where([fill]:not([fill=none],
[fill^=url])) {
  fill: currentColor;
}

/**
  Приводим к единому цвету svg-элементы
  (за исключением тех, у которых уже указан
  атрибут stroke со значением 'none')
 */
:where([stroke]:not([stroke=none],
[stroke^=url])) {
  stroke: currentColor;
}

/**
  Чиним баг задержки смены цвета при взаимодействии с svg-элементами
 */
svg * {
  transition-property: fill, stroke;
}

/**
  Приведение рамок таблиц в классический 'collapse' вид
 */
:where(table) {
  border-collapse: collapse;
  border-color: currentColor;
}

/**
  Удаляем все анимации и переходы для людей,
  которые предпочитают их не использовать
 */
@media (prefers-reduced-motion: reduce) {
  *,
  ::before,
  ::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
@font-face {
  font-family: "Montserrat";
  src: url(../fonts/Montserrat-Thin.woff2) format("woff2");
  font-weight: 100;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Montserrat";
  src: url(../fonts/Montserrat-Regular.woff2) format("woff2");
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Montserrat";
  src: url(../fonts/Montserrat-Bold.woff2) format("woff2");
  font-weight: 700;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Playfair Display";
  src: url(../fonts/PlayfairDisplay-Bold.woff2) format("woff2");
  font-weight: 700;
  font-style: normal;
  font-display: swap;
}
:root {
  --color-blue: #9FBDD9;
  --color-brown: #B48C65;
  --color-light-brown: #DFD0A9;
  --color-green: #90BE73;
  --color-dark: #000;
  --color-dark-alt: #393532;
  --color-light: #FFF;
  --color-light-alt: #F4F4F4;
  --color-gray: #888;
  --color-light-gray: #CCC;
  --color-placeholder: #EEE;
  --color-logo: #231F20;
  --color-border: #D8D8D8;
  --border: 1px solid var(--color-border);
  --border-radius: 8px;
  --border-radius-top: 8px 8px 0 0;
  --font-family-base: "Montserrat";
  --font-family-accent: "Playfair Display";
  --container-max-width: 1920px;
  --container-narrow-max-width: 1200px;
  --container-padding-x: 20px;
  --input-height: 59px;
  --button-height: 56px;
  --transition-duration: 0.2s;
}

.container {
  max-width: calc(var(--container-max-width) + var(--container-padding-x) * 2);
  margin-inline: auto;
  padding-inline: var(--container-padding-x);
}

.visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  margin: -1px !important;
  border: 0 !important;
  padding: 0 !important;
  white-space: nowrap !important;
  clip-path: inset(100%) !important;
  clip: rect(0 0 0 0) !important;
  overflow: hidden !important;
}

html, body {
  overflow-x: hidden;
}

body {
  font-size: clamp(16px, 0.9375vw, 18px);
  font-family: var(--font-family-base);
  font-weight: 400;
  line-height: 1.5;
  color: var(--color-dark);
  background-color: var(--color-dark-alt);
}

a,
button,
input,
textarea, svg * {
  transition-duration: var(--transition-duration);
}

a {
  text-decoration: none;
  color: inherit;
}

h1, h2, h3, h4 {
  font-family: var(--font-family-accent);
  font-weight: 700;
}

h2, .h2 {
  font-size: clamp(32px, 1.875vw, 36px);
  line-height: 1.16;
}

h3, .h3 {
  font-size: clamp(26px, 1.5625vw, 30px);
  line-height: 1.33;
}

h4, .h4 {
  font-size: clamp(18px, 1.0416666667vw, 20px);
}

.header__inner {
  display: flex;
  flex-direction: column;
  align-items: center;
  row-gap: 14px;
  padding-top: 60px;
  padding-bottom: 70px;
  background-color: var(--color-light-alt);
}
@media (max-width: 767px) {
  .header__inner {
    padding-block: 30px;
    row-gap: 5px;
  }
}
.header__logo svg {
  width: 100%;
  max-width: 460px;
  height: auto;
}
@media (max-width: 767px) {
  .header__logo svg {
    max-width: 300px;
  }
}
.header__description {
  max-width: 670px;
  line-height: 1.66;
  text-align: center;
}

.hero {
  position: relative;
  background: url(/images/hero-bg.png) lightgray 0px 0px/100% 100% no-repeat;
  background-size: cover;
  height: 530px;
}
.hero__subtitle {
  color: var(--color-gray);
  text-transform: uppercase;
  line-height: 1.5;
  font-weight: 700;
}
.hero__body {
  position: absolute;
  display: flex;
  flex-direction: column;
  max-width: 567px;
  margin-top: 163px;
  margin-left: 204px;
  padding-block: 32px;
  padding-left: 15px;
}
@media (max-width: 1023px) {
  .hero__body {
    left: 0;
    right: 0;
    margin-inline: auto;
  }
}
.hero__title:not(:last-child) {
  margin-bottom: 11px;
}/*# sourceMappingURL=styles.css.map */